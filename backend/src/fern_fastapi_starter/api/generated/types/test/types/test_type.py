# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class TestType(str, enum.Enum):
    EXACT_MATCH = "exact_match"
    REGEX = "regex"
    SEMANTIC_SIMILARITY = "semantic_similarity"
    JSON_VALIDITY = "json_validity"

    def visit(
        self,
        exact_match: typing.Callable[[], T_Result],
        regex: typing.Callable[[], T_Result],
        semantic_similarity: typing.Callable[[], T_Result],
        json_validity: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is TestType.EXACT_MATCH:
            return exact_match()
        if self is TestType.REGEX:
            return regex()
        if self is TestType.SEMANTIC_SIMILARITY:
            return semantic_similarity()
        if self is TestType.JSON_VALIDITY:
            return json_validity()
