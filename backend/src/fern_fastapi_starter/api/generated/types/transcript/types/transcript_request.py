# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ....core.datetime_utils import serialize_datetime
from .transcript_entry import TranscriptEntry
from pydantic import ConfigDict

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore


class TranscriptRequest(pydantic.BaseModel):
    call_sid: str = pydantic.Field(description="the unique identifier for the call session")
    merchant_id: str = pydantic.Field(description="the merchant's unique identifier")
    merchant_phone_number: str = pydantic.Field(description="the phone number of the merchant involved in the call")
    customer_phone_number: str = pydantic.Field(description="the phone number of the customer involved in the call")
    call_start_time: str = pydantic.Field(description="the start time of the call, formatted as MM/DD/YYYY:HH:MM")
    call_end_time: str = pydantic.Field(description="the end time of the call, formatted as MM/DD/YYYY:HH:MM")
    prompt_id: str = pydantic.Field(description="the unique ArgoID identifier of the prompt used during the call")
    prompt_content: str = pydantic.Field(description="the content of the prompt")
    prompt_variables: typing.List[str] = pydantic.Field(description="a list of variables associated with the prompt")
    transcript_content: typing.List[TranscriptEntry] = pydantic.Field(
        description="a detailed list of transcript entries detailing the conversation"
    )

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)
    # TODO[pydantic]: The following keys were removed: `json_encoders`.
    # Check https://docs.pydantic.dev/dev-v2/migration/#changes-to-config for more information.
    model_config = ConfigDict(extra=pydantic.Extra.forbid, json_encoders={dt.datetime: serialize_datetime})
